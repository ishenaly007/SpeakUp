.footer {
  background-color: var(--footer-bg);
  color: var(--footer-text-color);
  padding: 20px 0;
  width: 100%;
  text-align: center;
  margin-top: auto;
  transition: background-color 0.3s ease, color 0.3s ease;
}

.footerContent {
  max-width: 1200px; // Max width for content within the footer
  margin: 0 auto; // Center the content
  padding: 0 20px; // Horizontal padding for content, ensures it's not edge-to-edge on large screens
  display: flex;
  flex-direction: column; // Stack items vertically on small screens
  align-items: center; // Center items

  @media (min-width: 768px) { // On larger screens, display items side-by-side
    flex-direction: row;
    justify-content: space-between; // Space out copyright and nav links
  }
}

.footerNav {
  margin-top: 10px; // Space above nav links on small screens

  @media (min-width: 768px) {
    margin-top: 0; // No top margin on larger screens as it's side-by-side
  }

  .navLink {
    color: var(--footer-text-color); // Use themed text color for footer links
    text-decoration: none;
    margin: 0 10px;
    transition: color 0.3s ease;

    &:hover,
    &.activeLink {
      color: var(--primary-color); // Use themed primary color for hover/active
      text-decoration: underline;
    }
  }
}

// Add a global style to ensure App takes full height
// This might be better in global.scss or App.module.scss if it exists
// For now, let's assume it's fine here or will be moved if causing issues.
// It helps in making the footer stick to the bottom.
:global(#root), :global(.App) { // Targeting root and App div
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

:global(main) { // Ensure main content area can expand
  flex-grow: 1;
}
