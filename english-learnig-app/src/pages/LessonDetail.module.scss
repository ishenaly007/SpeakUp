@import '../styles/global.scss';

// Define box-shadows locally if not in global.scss, as per previous successful application
$box-shadow-sm: 0 2px 4px rgba(0,0,0,0.05);
$box-shadow-lg: 0 8px 16px rgba(0,0,0,0.1); // Define here as it will be used later

.lessonContainer {
  padding: 1rem; // Adjusted
  max-width: 1300px;
  margin: 1rem auto; // Adjusted
  background-color: $background-color;
  border-radius: $border-radius; // Use global
  box-shadow: none; // Removed shadow from container
}

.lessonHeader {
  text-align: center;
  margin-bottom: 2rem;
  background-color: $surface-color; // Or lighten($primary-color, 48%)
  padding: 1.5rem;
  border-radius: $border-radius;
  box-shadow: $box-shadow-sm; // Assuming $box-shadow-sm is defined or use a direct value
  border-top: 4px solid $primary-color;

  h2 {
    font-size: 2rem; // Adjusted
    color: $primary-color;
    margin-bottom: 0.75rem; // Adjusted
  }

  p {
    font-size: 1.1rem;
    color: $text-color; // Use global
    // Add svg styling if icons are here
    svg {
      margin-right: 0.5rem;
      color: $secondary-color;
    }
  }

  .note {
    font-style: italic;
    color: darken($primary-color, 10%); // Use global vars
    background-color: lighten($primary-color-light, 25%); // Use global vars
    padding: 1rem;
    border-radius: $border-radius; // Use global
    margin-top: 1rem;
    font-size: 1rem;
    border-left: 4px solid $primary-color; // Use global
    text-align: left; // Added for better readability
    svg { // Styling for potential icon
      margin-right: 0.5rem;
      color: $primary-color;
    }
  }

  .completed {
    color: $success-color; // Use global
    font-weight: bold;
    font-size: 1.1rem; // Adjusted
    margin-top: 0.5rem; // Adjusted
    svg { // Styling for potential icon
      margin-right: 0.5rem;
      vertical-align: middle;
    }
  }
}

.lessonContent {
  border: 1px solid $border-color; // Use global
  padding: 1.5rem 2rem; // Adjusted
  border-radius: $border-radius; // Use global
  background-color: $surface-color; // Use global
  margin-bottom: 2rem;
  box-shadow: $box-shadow-sm; // Assuming $box-shadow-sm is defined or use a direct value
  // :global selector for dynamically injected HTML (keep as is from previous attempts if it was there)
  :global(.lesson-html-content) {
    h1, h2, h3 { color: $primary-color; margin-top: 1.5rem; margin-bottom: 0.75rem;}
    p { color: $text-color; line-height: 1.7; margin-bottom: 1rem;}
    ul, ol { margin-left: 1.5rem; margin-bottom: 1rem;}
    code { background-color: $background-color; padding: 0.2em 0.4em; border-radius: 3px; font-family: monospace;}
    pre { background-color: $background-color; padding: 1rem; border-radius: $border-radius; overflow-x: auto;}
  }
}

.testsSection {
  text-align: center;
  margin: 2rem 0;
}

.testButton {
  padding: 0.8rem 1.5rem;
  font-size: 1.1rem; // Adjusted
  color: #fff; // Ensure contrast
  background-color: darken($primary-color, 5%); // Already uses global var
  border: none;
  border-radius: $border-radius; // Use global
  cursor: pointer;
  transition: background-color 0.2s ease, box-shadow 0.2s ease; // Added box-shadow transition
  box-shadow: $box-shadow-sm; // Add shadow
  text-decoration: none; // For Link components if used
  display: inline-flex; // To align icon and text
  align-items: center;
  justify-content: center;

  svg { // Styling for potential icon
    margin-right: 0.5rem;
  }

  &:hover {
    background-color: darken($primary-color, 15%); // Darken more on hover
    box-shadow: $box-shadow-lg; // More prominent shadow
  }
  &:disabled { // Disabled state
    background-color: $border-color;
    color: $secondary-color;
    cursor: not-allowed;
    box-shadow: none;
  }
}

.secondaryButton {
  // Apply similar structure as .testButton for consistency
  padding: 0.8rem 1.5rem;
  font-size: 1.1rem;
  color: #fff;
  background-color: $secondary-color; // Use global
  border: none;
  border-radius: $border-radius;
  cursor: pointer;
  transition: background-color 0.2s ease, box-shadow 0.2s ease;
  box-shadow: $box-shadow-sm;
  text-decoration: none;
  display: inline-flex;
  align-items: center;
  justify-content: center;

  svg {
    margin-right: 0.5rem;
  }

  &:hover {
    background-color: darken($secondary-color, 10%);
    box-shadow: $box-shadow-lg;
  }
  &:disabled {
    background-color: lighten($secondary-color, 20%);
    color: darken($secondary-color, 20%);
    cursor: not-allowed;
    box-shadow: none;
  }
}

.testCard {
  border: 1px solid $border-color; // Use global
  padding: 2rem;
  border-radius: $border-radius; // Use global
  background-color: $surface-color; // Use global
  margin: 2rem auto; // Adjusted
  max-width: 700px;
  box-shadow: $box-shadow-lg; // Use defined shadow

  .questionCounter {
    font-size: 1rem; // Adjusted
    color: $secondary-color; // Use global
    margin-bottom: 1rem; // Adjusted
    svg { // Styling for potential icon
      margin-right: 0.5rem;
      color: $primary-color;
    }
  }

  .timerBarContainer {
    width: 100%;
    height: 12px; // Adjusted
    background-color: $border-color; // Use global
    border-radius: $border-radius; // Use global
    margin-bottom: 1.5rem; // Adjusted
    overflow: hidden;
  }

  .timerBar {
    height: 100%;
    background-color: $success-color; // Use global
    border-radius: $border-radius; // Use global
    transition: width 0.1s linear;
  }

  .questionWord {
    font-size: 2.2rem; // Adjusted
    font-weight: bold;
    color: $text-color; // Use global
    margin-bottom: 2rem; // Adjusted
    padding: 1.5rem; // Adjusted
    background-color: lighten($background-color, 2%); // Use global with adjustment
    border-radius: $border-radius; // Use global
    border: 1px solid $border-color; // Use global
    text-align: center;
  }

  .optionsContainer {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); // Adjusted
    gap: 1rem; // Adjusted
  }

  .optionButton {
    padding: 0.8rem 1rem; // Adjusted
    font-size: 1rem;
    background-color: $surface-color; // Use global
    border: 2px solid $primary-color; // Adjusted border
    color: $primary-color; // Use global
    border-radius: $border-radius; // Use global
    cursor: pointer;
    transition: background-color 0.2s ease, color 0.2s ease, transform 0.1s ease; // Added transform
    text-align: center;

    &:hover:not(:disabled) {
      background-color: $primary-color;
      color: #fff; // Ensure contrast
      transform: translateY(-2px); // Add hover effect
    }

    &:disabled {
      background-color: $border-color; // Use global
      color: $secondary-color; // Use global
      border-color: darken($border-color, 10%); // Use global with adjustment
      cursor: not-allowed;
    }
  }
}

.resultsView {
  text-align: center;
  padding: 2.5rem; // Adjusted
  background-color: $surface-color; // Use global
  border-radius: $border-radius; // Use global
  box-shadow: $box-shadow-lg; // Use defined shadow
  margin: 2rem auto;
  max-width: 700px;

  h2 {
    font-size: 2.2rem; // Adjusted
    color: $success-color; // Use global
    margin-bottom: 1rem;
    display: flex; // For icon alignment
    align-items: center;
    justify-content: center;
    svg { // Styling for potential icon
      margin-right: 0.75rem;
      font-size: 2rem; // Adjusted
    }
  }

  p {
    font-size: 1.1rem;
    color: $text-color; // Use global
    margin-bottom: 0.75rem;
  }

  .note { // Consistent styling for note
    font-style: italic;
    color: darken($secondary-color, 10%); // Use global vars
    background-color: lighten($secondary-color, 45%); // Use global vars
    padding: 1rem;
    border-radius: $border-radius; // Use global
    margin: 1.5rem 0; // Adjusted
    border-left: 4px solid $secondary-color; // Use global
    text-align: left;
  }

  .resultsActions {
    margin-top: 2rem; // Adjusted
    display: flex;
    flex-wrap: wrap; // Added for responsiveness
    gap: 1rem;
    justify-content: center;
  }
}

.loadingMessage, .errorMessage { // Renamed for consistency
  text-align: center;
  font-size: 1.2rem; // Adjusted
  padding: 2rem; // Adjusted
  border-radius: $border-radius; // Use global
}

.errorMessage { // Renamed and styled with global vars
  color: $danger-color;
  background-color: lighten($danger-color, 35%);
  border: 1px solid lighten($danger-color, 20%);
  // Ensure .loadingMessage has some basic styling if needed, or remove if not distinct
}

// Responsive adjustments
@media (max-width: 768px) {
  .lessonContainer {
    padding: 0.5rem; // Less padding on container for mobile
    margin: 0.5rem auto;
  }

  .lessonHeader, .lessonContent, .testCard, .resultsView {
    padding: 1rem; // Consistent padding for cards on mobile
    margin-left: 0.5rem; // Ensure they are within container padding
    margin-right: 0.5rem;
    max-width: calc(100% - 1rem); // Ensure they fit
  }

  .lessonHeader h2 { font-size: 1.6rem; }
  .lessonHeader p { font-size: 1rem; }

  .testCard {
    .questionWord { font-size: 1.8rem; padding: 1rem;}
    .optionsContainer { grid-template-columns: 1fr; gap: 0.5rem;} // Stack options
    .optionButton { font-size: 0.9rem; padding: 0.75rem;}
  }

  .resultsView h2 { font-size: 1.8rem; svg { font-size: 1.6rem;} }
  .resultsView p { font-size: 1rem; }
  .testButton, .secondaryButton { font-size: 1rem; padding: 0.7rem 1.2rem; } // .testButton is primary action button
}

@media (max-width: 480px) {
  .lessonHeader h2 { font-size: 1.4rem; }
  .testCard .questionWord { font-size: 1.5rem; }
  .testCard .optionButton { font-size: 0.85rem; }
  // .testCard .questionCounter can remain as is or be adjusted if too small
  .resultsView h2 { font-size: 1.6rem; svg { font-size: 1.4rem;} }
}

// Fallback variables were removed in a previous step.